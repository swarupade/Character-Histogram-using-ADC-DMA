-----------------------------------------------------------------------------------------------
The program can be compiled for LINUX and cross compiled for Beagle Bone and KL25Z
-----------------------------------------------------------------------------------------------
>> make PLATFORM="host name"

host name = LINUX or KL25Z or BB

To execute 
>> ./char_histogram

To generate executable for unit test
>> make unit

To execute unit test
./unit

To clean compiled products
>> make clean
-------------------------------------------------------------------------------------------------
Mode selections POLLING or INTERRUPT in FRDM

For the character echo application using polling UART mode, uncomment the macro #define POLLING
For the Character Histogam application using Interrupt mode in UART, uncomment the macro #define INTERRUPT
 

For debugging purpose, uncomment the macro #define DEBUG
-------------------------------------------------------------------------------------------------
Implemented functions:
---------------------
init_CB.c 
-------
- This function creates a Circular buffer using circular linked list.
. Arguments - The address of the object created for circular buffer structure
			- The size to be created

insert_data.c
-----------
- This is used for inserting elements into the circular buffer
- Arguments - The address of the object created for circular buffer structure
			- The data to be inserted


pop_data.c
-----------
- This is used for poping out elements from the circular buffer
- Arguments - The address of the object created for circular buffer structure
			- output - The data will be poped out

clear_data.c
-----------
- This is used for clearing the data stored in circular buffer
- Arguments - The address of the object created for circular buffer structure


insert_link.c
-----------
- This is used for creating the nodes in the circular linked list
- Arguments - The address of the object created for circular buffer structure

report_data.c
-----------
- This is used for displaying the elements in the circular linked list at any point of time and the count of the number of elements
- Arguments - The address of the object created for circular buffer structure

resize_CB.c
-----------
- This is used for resizing the existing circular buffer
- Arguments - The address of the object created for circular buffer structure
			- The size by which it has to be increased
-----------------------------------------------------------------------------------------------

Boundary checks implemented
---------------------------
- Checks if the circular buffer is previously initialised and not null pointer before calling each function of circular buffer
- checks if the length entered for size of the circular buffer created is valid positive number
- Checks if the buffer is empty before poping out data, reporting data, clearing data
- Checks if buffer is full before inserting data
- Handles memory failures while creating node

-------------------------------------------------------------------------------------------------
CUnit Testing:
-------------
- Long automated CUnit test cases for done using random numbers for input arguments.
- The random sequence values for the circular buffer are curtailed to be within the max size of ascii value
-----------------------------------------------------------------------------------------------
KL25Z 
- Select the buad rate of 57600 as UART is configured for the same.

- In the polling mode, whatever is given as input in the serial terminal will be echoed back to the terminal using UART polling.

Character Histogram
-------------------
- This is implemented using the interrupt mode of UART so as to avoid the CPU wasting time in scaning for input characters
- An histogram will be displayed based on the inputs eneterd by the user.
- This has been tested to work for each character occurance range of the max value of uint32_t which is 4294967295
- When no chacter is entered for a particular timeout value, the report for the histogram will be generated by triggering a systick interrupt
- Whenever it is serving a UART interrupt or systick interrupt, RED LED will be ON
- Whenever it is not serving any interrupt, it does the process of calcuting prime numbers in natural numbers. When an interrupt occurs during this process, it servers the
  interrupt and after the histogram report generation, it prints a triangle pattern using the prime number which it found when the main loop was interrupted.
  ---------------------------------------------------------------------------------------------